---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard

---
apiVersion: v1
kind: Secret
metadata:
  name: admin-user
  namespace: kubernetes-dashboard
  annotations:
    kubernetes.io/service-account.name: "admin-user"   
type: kubernetes.io/service-account-token  

###############################################################
#   Add developer user for kubernetes dashboard to access
#   only view purpose.
###############################################################
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: developer
  namespace: kubernetes-dashboard

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: developer-reader
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "watch", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: developer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: developer-reader
subjects:
- kind: ServiceAccount
  name: developer
  namespace: kubernetes-dashboard

---
apiVersion: v1
kind: Secret
metadata:
  name: developer
  namespace: kubernetes-dashboard
  annotations:
    kubernetes.io/service-account.name: "developer"   
type: kubernetes.io/service-account-token 


## token collection command 
# kubectl get secret admin-user -n kubernetes-dashboard -o jsonpath="{.data.token}" | base64 -d
# kubectl get secret developer -n kubernetes-dashboard -o jsonpath="{.data.token}" | base64 -d

